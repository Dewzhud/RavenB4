-- Set RavenB4Started to true to indicate that RavenB4 has started
shared.RavenB4Started = true

-- Load RavenConfig from the provided URL
local RavenConfig = loadstring(game:HttpGet('https://raw.githubusercontent.com/goinglikeatrainlol/RavenB4Roblox/main/Raven%20Main%20Loader'))()

-- Variable to store the state of God Mode
local GodModeEnabled = false
local SpiderModeEnabled = false
-- Variable to store the state of Flying Mode
local FlyingModeEnabled = false

-- Function to be executed when the game is loaded
local function OnGameLoaded()
    -- Additional code that you want to execute when the game is loaded
    print("Game is loaded.")
    
    -- Check if God Mode is enabled and execute accordingly
    if GodModeEnabled then
        EnableGodMode()
    else
        DisableGodMode()
    end
end

-- Function to enable God Mode
local function EnableGodMode()
    -- Add code to enable God Mode here
    print("God Mode is enabled.")
    
    -- Example: Prevent the character from taking damage
    game.Players.LocalPlayer.Character:WaitForChild("Humanoid").HealthChanged:Connect(function(health)
        if health < game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health = health
        end
    end)

    -- Example: Enable Flying Mode
    SetFlyingMode(true)
end

-- Function to disable God Mode
local function DisableGodMode()
    -- Add code to disable God Mode here
    print("God Mode is disabled.")
    
    -- Example: Remove the HealthChanged connection
    game.Players.LocalPlayer.Character:WaitForChild("Humanoid").HealthChanged:Disconnect()

    -- Example: Disable Flying Mode
    SetFlyingMode(false)
end

-- Function to toggle God Mode state
local function ToggleGodMode()
    GodModeEnabled = not GodModeEnabled

    if GodModeEnabled then
        EnableGodMode()
    else
        DisableGodMode()
    end
end

-- Function to set Flying Mode state
local function SetFlyingMode(state)
    FlyingModeEnabled = state
    
    -- Example: Use RavenB4 API to set the Humanoid state
    RavenConfig:SetStateEnabled("Flying", state)
    
    -- Example: Move the character using HumanoidRootPart
    local humanoidRootPart = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    
    if state then
        -- Example: Teleport the character to the player's position
        humanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end
end

-- Function to toggle Flying Mode state
local function ToggleFlyingMode()
    FlyingModeEnabled = not FlyingModeEnabled

    if FlyingModeEnabled then
        EnableFlyingMode()
    else
        DisableFlyingMode()
    end
end

-- Create a Toggle button for God Mode
local GodModeToggle = Combat:CreateToggle({
    Name = "God Mode",
    StartingState = false,
    Callback = ToggleGodMode
})

-- Create a Toggle button for Flying Mode
local FlyingModeToggle = Blatant:CreateToggle({
    Name = "Flying Mode",
    StartingState = false,
    Callback = ToggleFlyingMode
})

if SpiderModeEnabled then
    EnableSpiderMode()
else
    DisableSpiderMode()
end


-- Function to enable Spider Mode
local function EnableSpiderMode()
-- Add code to enable Spider Mode here
print("Spider Mode is enabled.")

-- Example: Enable Spider Mode using RavenB4 API
RavenConfig:SetStateEnabled("Spider", true)

-- Example: Modify HumanoidRootPart properties for wall climbing
local humanoidRootPart = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
humanoidRootPart.Anchored = false -- Unanchor to allow movement
humanoidRootPart.CanCollide = false -- Disable collisions to allow passing through walls
end

-- Function to disable Spider Mode
local function DisableSpiderMode()
-- Add code to disable Spider Mode here
print("Spider Mode is disabled.")

-- Example: Disable Spider Mode using RavenB4 API
RavenConfig:SetStateEnabled("Spider", false)

-- Example: Restore HumanoidRootPart properties
local humanoidRootPart = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
humanoidRootPart.Anchored = true -- Re-anchor to prevent unintended movement
humanoidRootPart.CanCollide = true -- Enable collisions
end

-- Function to toggle Spider Mode state
local function ToggleSpiderMode()
SpiderModeEnabled = not SpiderModeEnabled

if SpiderModeEnabled then
    EnableSpiderMode()
else
    DisableSpiderMode()
end
end

-- Create a Toggle button for Spider Mode
local SpiderModeToggle = Combat:CreateToggle({
Name = "Spider Mode",
StartingState = false,
Callback = ToggleSpiderMode
})


-- Connect the OnGameLoaded function to the Loaded event
game.Loaded:Connect(OnGameLoaded)
